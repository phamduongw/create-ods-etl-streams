-- ODS_CATEG_ENTRY_2
ERROR!

-- CATEG_ENTRY_ETL
CREATE STREAM CATEG_ENTRY_ETL WITH (CLEANUP_POLICY='delete', KAFKA_TOPIC='CATEG_ENTRY_ETL', PARTITIONS=3, REPLICAS=3, RETENTION_MS=1814400000) AS SELECT
  DATA.OP_TS OP_TS,
  DATA.REP_TS REP_TS,
  PARSE_TIMESTAMP(DATA.OP_TS, 'yyyy-MM-dd HH:mm:ss.SSSSSS') COMMIT_TIME,
  PARSE_TIMESTAMP(TIMESTAMPTOSTRING(DATA.ROWTIME, 'yyyy-MM-dd HH:mm:ss.SSS'), 'yyyy-MM-dd HH:mm:ss.SSS') CURRENT_TS,
  PARSE_TIMESTAMP(DATA.REP_TS, 'yyyy-MM-dd HH:mm:ss.SSSSSS') REPLICAT_TS,
  DATA.RECID RECID,
  DATA.ROWKEY ROWKEY,
  DATA.TABLE_NAME TABLE_NAME,
  DATA.COMMIT_SCN COMMIT_SCN,
  DATA.COMMIT_ACTION COMMIT_ACTION,
  DATA.XMLRECORD['ACCOUNT_NUMBER'] ACCOUNT_NUMBER,
  DATA.XMLRECORD['COMPANY_CODE'] COMPANY_CODE,
  CAST(DATA.XMLRECORD['AMOUNT_LCY'] AS DECIMAL(19, 2)) AMOUNT_LCY,
  DATA.XMLRECORD['TRANSACTION_CODE'] TRANSACTION_CODE,
  DATA.XMLRECORD['THEIR_REFERENCE'] THEIR_REFERENCE,
  DATA.XMLRECORD['PL_CATEGORY'] PL_CATEGORY,
  DATA.XMLRECORD['CUSTOMER_ID'] CUSTOMER_ID,
  DATA.XMLRECORD['ACCOUNT_OFFICER'] ACCOUNT_OFFICER,
  DATA.XMLRECORD['PRODUCT_CATEGORY'] PRODUCT_CATEGORY,
  PARSE_DATE(DATA.XMLRECORD['VALUE_DATE'], 'yyyyMMdd') VALUE_DATE,
  DATA.XMLRECORD['CURRENCY'] CURRENCY,
  CAST(DATA.XMLRECORD['AMOUNT_FCY'] AS DECIMAL(19, 2)) AMOUNT_FCY,
  DATA.XMLRECORD['EXCHANGE_RATE'] EXCHANGE_RATE,
  DATA.XMLRECORD['NEGOTIATED_REF_NUM'] NEGOTIATED_REF_NUM,
  DATA.XMLRECORD['POSITION_TYPE'] POSITION_TYPE,
  DATA.XMLRECORD['OUR_REFERENCE'] OUR_REFERENCE,
  DATA.XMLRECORD['REVERSAL_MARKER'] REVERSAL_MARKER,
  PARSE_DATE(DATA.XMLRECORD['EXPOSURE_DATE'], 'yyyyMMdd') EXPOSURE_DATE,
  DATA.XMLRECORD['CURRENCY_MARKET'] CURRENCY_MARKET,
  DATA.XMLRECORD['DEPARTMENT_CODE'] DEPARTMENT_CODE,
  DATA.XMLRECORD['TRANS_REFERENCE'] TRANS_REFERENCE,
  DATA.XMLRECORD['SYSTEM_ID'] SYSTEM_ID,
  UCASE(CAST(FORMAT_DATE(PARSE_DATE(DATA.XMLRECORD['BOOKING_DATE'], 'yyyyMMdd'), 'dd-MMM-yy') AS STRING)) BOOKING_DATE_OLD,
  DATA.XMLRECORD['RECORD_STATUS'] RECORD_STATUS,
  DATA.XMLRECORD['CURR_NO'] CURR_NO,
  DATA.XMLRECORD['SUSPENSE_CATEGORY'] SUSPENSE_CATEGORY,
  PARSE_DATE(DATA.XMLRECORD['SUSPNSE_VALUE_DATE'], 'yyyyMMdd') SUSPNSE_VALUE_DATE,
  DATA.XMLRECORD['SUPPRESS_POSITION'] SUPPRESS_POSITION,
  DATA.XMLRECORD['CRF_TYPE'] CRF_TYPE,
  DATA.XMLRECORD['CRF_TXN_CODE'] CRF_TXN_CODE,
  DATA.XMLRECORD['CRF_CURRENCY'] CRF_CURRENCY,
  DATA.XMLRECORD['CRF_AMOUNT'] CRF_AMOUNT,
  DATA.XMLRECORD['CRF_MAT_DATE'] CRF_MAT_DATE,
  DATA.XMLRECORD['CRF_PROD_CAT'] CRF_PROD_CAT,
  DATA.XMLRECORD['PM_TYPE'] PM_TYPE,
  DATA.XMLRECORD['DEALER_DESK'] DEALER_DESK,
  DATA.XMLRECORD['COUNTERPARTY'] COUNTERPARTY,
  DATA.XMLRECORD['LIQUIDATION_MODE'] LIQUIDATION_MODE,
  PARSE_DATE(DATA.XMLRECORD['REPAYMENT_DATE'], 'yyyyMMdd') REPAYMENT_DATE,
  CAST(DATA.XMLRECORD['OUTSTANDING_BAL'] AS DECIMAL(19, 2)) OUTSTANDING_BAL,
  CAST(DATA.XMLRECORD['CONTRACT_INT_RATE'] AS DECIMAL(19, 2)) CONTRACT_INT_RATE,
  DATA.XMLRECORD['CONTRACT_INT_KEY'] CONTRACT_INT_KEY,
  DATA.XMLRECORD['CYCLE_FORWARD'] CYCLE_FORWARD,
  DATA.XMLRECORD['ORIG_LOCAL_EQUIV'] ORIG_LOCAL_EQUIV,
  CAST(DATA.XMLRECORD['ORIGINAL_AMOUNT'] AS DECIMAL(19, 2)) ORIGINAL_AMOUNT,
  DATA.XMLRECORD['ORIGINAL_CCY'] ORIGINAL_CCY,
  DATA.XMLRECORD['CONSOL_KEY'] CONSOL_KEY,
  CAST(DATA.XMLRECORD['ORIGINAL_EXCH_RATE'] AS DECIMAL(19, 2)) ORIGINAL_EXCH_RATE,
  PARSE_DATE(DATA.XMLRECORD['ACCOUNTING_DATE'], 'yyyyMMdd') ACCOUNTING_DATE,
  SEAB_FIELD(DATA.XMLRECORD['INPUTTER'], '_', 2) INPUTTER,
  PARSE_TIMESTAMP(DATA.XMLRECORD['DATE_TIME'], 'yyyy-MM-dd HH:mm:ss') DATE_TIME,
  DATA.XMLRECORD['AUTHORISER'] AUTHORISER,
  PARSE_DATE(DATA.XMLRECORD['BOOKING_DATE'], 'yyyyMMdd') BOOKING_DATE,
  TRIM(CONCAT(DATA.XMLRECORD['NARRATIVE'], REGEXP_REPLACE(DATA.XMLRECORD['NARRATIVE_multivalue'], '(^1|#[0-9]+):', ' '))) NARRATIVE,
  DATA.XMLRECORD['INPUTTER'] INPUTTER_HIS,
  DATA.LOOKUP_KEY LOOKUP_KEY
FROM CATEG_ENTRY_MAPPED DATA
EMIT CHANGES;

-- ODS_CATEG_ENTRY_1
CREATE OR REPLACE STREAM ODS_CATEG_ENTRY_1 WITH (CLEANUP_POLICY='delete', KAFKA_TOPIC='ODS_CATEG_ENTRY_1', PARTITIONS=1, REPLICAS=3, RETENTION_MS=1814400000) AS SELECT
  DATA.OP_TS OP_TS,
  DATA.REP_TS REP_TS,
  PARSE_TIMESTAMP(TIMESTAMPTOSTRING(DATA.ROWTIME, 'yyyy-MM-dd HH:mm:ss.SSS'), 'yyyy-MM-dd HH:mm:ss.SSS') STREAM_TS,
  FORMAT_TIMESTAMP(FROM_UNIXTIME(DATA.ROWTIME), 'yyyy-MM-dd HH:mm:ss.SSS') CURRENT_TS,
  DATA.RECID RECID,
  DATA.ROWKEY ROWKEY,
  DATA.COMMIT_SCN DATA_COMMIT_SCN,
  DATA.COMMIT_ACTION COMMIT_ACTION,
  DATA.XMLRECORD['ACCOUNT_NUMBER'] ACCOUNT_NUMBER,
  DATA.XMLRECORD['COMPANY_CODE'] COMPANY_CODE,
  CAST(DATA.XMLRECORD['AMOUNT_LCY'] AS DECIMAL(19, 2)) AMOUNT_LCY,
  DATA.XMLRECORD['TRANSACTION_CODE'] TRANSACTION_CODE,
  DATA.XMLRECORD['THEIR_REFERENCE'] THEIR_REFERENCE,
  DATA.XMLRECORD['PL_CATEGORY'] PL_CATEGORY,
  DATA.XMLRECORD['CUSTOMER_ID'] CUSTOMER_ID,
  DATA.XMLRECORD['ACCOUNT_OFFICER'] ACCOUNT_OFFICER,
  DATA.XMLRECORD['PRODUCT_CATEGORY'] PRODUCT_CATEGORY,
  PARSE_DATE(DATA.XMLRECORD['VALUE_DATE'], 'yyyyMMdd') VALUE_DATE,
  DATA.XMLRECORD['CURRENCY'] CURRENCY,
  CAST(DATA.XMLRECORD['AMOUNT_FCY'] AS DECIMAL(19, 2)) AMOUNT_FCY,
  DATA.XMLRECORD['EXCHANGE_RATE'] EXCHANGE_RATE,
  DATA.XMLRECORD['NEGOTIATED_REF_NUM'] NEGOTIATED_REF_NUM,
  DATA.XMLRECORD['POSITION_TYPE'] POSITION_TYPE,
  DATA.XMLRECORD['OUR_REFERENCE'] OUR_REFERENCE,
  DATA.XMLRECORD['REVERSAL_MARKER'] REVERSAL_MARKER,
  PARSE_DATE(DATA.XMLRECORD['EXPOSURE_DATE'], 'yyyyMMdd') EXPOSURE_DATE,
  DATA.XMLRECORD['CURRENCY_MARKET'] CURRENCY_MARKET,
  DATA.XMLRECORD['DEPARTMENT_CODE'] DEPARTMENT_CODE,
  DATA.XMLRECORD['TRANS_REFERENCE'] TRANS_REFERENCE,
  DATA.XMLRECORD['SYSTEM_ID'] SYSTEM_ID,
  UCASE(CAST(FORMAT_DATE(PARSE_DATE(DATA.XMLRECORD['BOOKING_DATE'], 'yyyyMMdd'), 'dd-MMM-yy') AS STRING)) BOOKING_DATE_OLD,
  DATA.XMLRECORD['RECORD_STATUS'] RECORD_STATUS,
  DATA.XMLRECORD['CURR_NO'] CURR_NO,
  DATA.XMLRECORD['SUSPENSE_CATEGORY'] SUSPENSE_CATEGORY,
  PARSE_DATE(DATA.XMLRECORD['SUSPNSE_VALUE_DATE'], 'yyyyMMdd') SUSPNSE_VALUE_DATE,
  DATA.XMLRECORD['SUPPRESS_POSITION'] SUPPRESS_POSITION,
  DATA.XMLRECORD['CRF_TYPE'] CRF_TYPE,
  DATA.XMLRECORD['CRF_TXN_CODE'] CRF_TXN_CODE,
  DATA.XMLRECORD['CRF_CURRENCY'] CRF_CURRENCY,
  DATA.XMLRECORD['CRF_AMOUNT'] CRF_AMOUNT,
  DATA.XMLRECORD['CRF_MAT_DATE'] CRF_MAT_DATE,
  DATA.XMLRECORD['CRF_PROD_CAT'] CRF_PROD_CAT,
  DATA.XMLRECORD['PM_TYPE'] PM_TYPE,
  DATA.XMLRECORD['DEALER_DESK'] DEALER_DESK,
  DATA.XMLRECORD['COUNTERPARTY'] COUNTERPARTY,
  DATA.XMLRECORD['LIQUIDATION_MODE'] LIQUIDATION_MODE,
  PARSE_DATE(DATA.XMLRECORD['REPAYMENT_DATE'], 'yyyyMMdd') REPAYMENT_DATE,
  CAST(DATA.XMLRECORD['OUTSTANDING_BAL'] AS DECIMAL(19, 2)) OUTSTANDING_BAL,
  CAST(DATA.XMLRECORD['CONTRACT_INT_RATE'] AS DECIMAL(19, 2)) CONTRACT_INT_RATE,
  DATA.XMLRECORD['CONTRACT_INT_KEY'] CONTRACT_INT_KEY,
  DATA.XMLRECORD['CYCLE_FORWARD'] CYCLE_FORWARD,
  DATA.XMLRECORD['ORIG_LOCAL_EQUIV'] ORIG_LOCAL_EQUIV,
  CAST(DATA.XMLRECORD['ORIGINAL_AMOUNT'] AS DECIMAL(19, 2)) ORIGINAL_AMOUNT,
  DATA.XMLRECORD['ORIGINAL_CCY'] ORIGINAL_CCY,
  DATA.XMLRECORD['CONSOL_KEY'] CONSOL_KEY,
  CAST(DATA.XMLRECORD['ORIGINAL_EXCH_RATE'] AS DECIMAL(19, 2)) ORIGINAL_EXCH_RATE,
  PARSE_DATE(DATA.XMLRECORD['ACCOUNTING_DATE'], 'yyyyMMdd') ACCOUNTING_DATE,
  SEAB_FIELD(DATA.XMLRECORD['INPUTTER'], '_', 2) INPUTTER,
  PARSE_TIMESTAMP(DATA.XMLRECORD['DATE_TIME'], 'yyyy-MM-dd HH:mm:ss') DATE_TIME,
  DATA.XMLRECORD['AUTHORISER'] AUTHORISER,
  PARSE_DATE(DATA.XMLRECORD['BOOKING_DATE'], 'yyyyMMdd') BOOKING_DATE,
  TRIM(CONCAT(DATA.XMLRECORD['NARRATIVE'], REGEXP_REPLACE(DATA.XMLRECORD['NARRATIVE_multivalue'], '(^1|#[0-9]+):', ' '))) NARRATIVE,
  DATA.XMLRECORD['INPUTTER'] INPUTTER_HIS
FROM CATEG_ENTRY_1_MAPPED DATA
EMIT CHANGES;